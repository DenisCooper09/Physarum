#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (rgba32f, binding = 0) uniform image2D u_Image;

uniform ivec2 u_Resolution;

struct Agent
{
    vec2 position;
    float heading;
    float cooldown;
    int sensor_offset;
    int sensor_number;

    float _padding1;
    float _padding2;
};

layout (std430, binding = 1) buffer Agents
{
    Agent agents[];
};

const float DECAY = 0.995f;
const float DECAY_AGENT = 0.1f;

void main()
{
    ivec2 texel = ivec2(gl_GlobalInvocationID.xy);
    vec4 texel_color = imageLoad(u_Image, texel);
    imageStore(u_Image, texel, texel_color * vec4(DECAY, DECAY, DECAY, 1.0f));

    /*
    uint id = texel.x + texel.y * u_Resolution.y;

    if (id >= agents.length())
    {
        imageStore(u_Image, texel, texel_color * vec4(DECAY, DECAY, DECAY, 1.0f));
        return;
    }

    if (texel == ivec2(agents[id].position))
    {
        imageStore(u_Image, texel, texel_color * vec4(DECAY_AGENT, DECAY_AGENT, DECAY_AGENT, 1.0f));
    }
    else
    {
        imageStore(u_Image, texel, texel_color * vec4(DECAY, DECAY, DECAY, 1.0f));
    }*/
}
