#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (rgba32f, binding = 0) uniform image2D u_Image;

uniform ivec2 u_Resolution;

const float PI = 3.14159265359;

struct Agent
{
    vec2 position;
    float heading;
    float cooldown;
    int sensor_offset;
    int sensor_number;

    float _padding1;
    float _padding2;
};

struct Sensor
{
    float angle;
    float extent;

    float _padding1;
    float _padding2;
};

layout (std430, binding = 1) buffer Agents
{
    Agent agents[];
};

layout (std430, binding = 2) buffer Sensors
{
    Sensor sensors[];
};

void main()
{
    uint i = gl_GlobalInvocationID.x;

    vec2 delta = vec2(sin(agents[i].heading), cos(agents[i].heading)) * 5.0f + agents[i].position;
    delta = mod(delta, u_Resolution);

    ivec2 idelta = ivec2(delta);

    vec4 status = imageLoad(u_Image, idelta);

    if (status.g > 0 && idelta != ivec2(agents[i].position))
    {
        agents[i].heading *= -1.0f;
        return;
    }

    status.g = 0;
    status.r = 1.0f;
    imageStore(u_Image, ivec2(agents[i].position), status);

    agents[i].position = delta;

    status.g = 1;
    status.r = 1.0f;
    imageStore(u_Image, ivec2(agents[i].position), status);
}
